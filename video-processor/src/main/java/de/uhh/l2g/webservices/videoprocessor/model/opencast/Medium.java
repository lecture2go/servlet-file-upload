
package de.uhh.l2g.webservices.videoprocessor.model.opencast;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Auto-generated by http://www.jsonschema2pojo.org/ (and manually edited)
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "duration",
    "flavor",
    "identifier",
    "size",
    "streams",
    "checksum",
    "description",
    "element-description",
    "uri",
    "tags"
})
public class Medium {

    @JsonProperty("duration")
    private Integer duration;
    @JsonProperty("flavor")
    private String flavor;
    @JsonProperty("identifier")
    private String identifier;
    @JsonProperty("size")
    private Integer size;
    @JsonProperty("streams")
    private Streams streams;
    @JsonProperty("checksum")
    private String checksum;
    @JsonProperty("description")
    private String description;
    @JsonProperty("element-description")
    private String elementDescription;
    @JsonProperty("uri")
    private String uri;
    @JsonProperty("tags")
    private List<String> tags = null;
    
    // starting with opencast 11, the mimetype is correctly added to the field mimetype (instead of identifier)
    @JsonProperty("mimetype")
    private String mimetype;
    
    @JsonIgnore
    private Map<String, Object> additionalProperties = new HashMap<String, Object>();

    @JsonProperty("duration")
    public Integer getDuration() {
        return duration;
    }

    @JsonProperty("duration")
    public void setDuration(Integer duration) {
        this.duration = duration;
    }

    @JsonProperty("flavor")
    public String getFlavor() {
        return flavor;
    }

    @JsonProperty("flavor")
    public void setFlavor(String flavor) {
        this.flavor = flavor;
    }

    @JsonProperty("identifier")
    public String getIdentifier() {
        return identifier;
    }

    @JsonProperty("identifier")
    public void setIdentifier(String identifier) {
        this.identifier = identifier;
    }

    @JsonProperty("size")
    public Integer getSize() {
        return size;
    }

    @JsonProperty("size")
    public void setSize(Integer size) {
        this.size = size;
    }

    @JsonProperty("streams")
    public Streams getStreams() {
        return streams;
    }

    @JsonProperty("streams")
    public void setStreams(Streams streams) {
        this.streams = streams;
    }

    @JsonProperty("checksum")
    public String getChecksum() {
        return checksum;
    }

    @JsonProperty("checksum")
    public void setChecksum(String checksum) {
        this.checksum = checksum;
    }

    @JsonProperty("description")
    public String getDescription() {
        return description;
    }

    @JsonProperty("description")
    public void setDescription(String description) {
        this.description = description;
    }

    @JsonProperty("element-description")
    public String getElementDescription() {
        return elementDescription;
    }

    @JsonProperty("element-description")
    public void setElementDescription(String elementDescription) {
        this.elementDescription = elementDescription;
    }

    @JsonProperty("uri")
    public String getUri() {
        return uri;
    }

    @JsonProperty("uri")
    public void setUri(String uri) {
        this.uri = uri;
    }

    @JsonProperty("tags")
    public List<String> getTags() {
        return tags;
    }

    @JsonProperty("tags")
    public void setTags(List<String> tags) {
        this.tags = tags;
    }
    
    @JsonProperty("mimetype")
    public String getMimetype() {
        return mimetype;
    }

    @JsonProperty("mimetype")
    public void setMimetype(String mimetype) {
        this.mimetype = mimetype;
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperty(String name, Object value) {
        this.additionalProperties.put(name, value);
    }

}
